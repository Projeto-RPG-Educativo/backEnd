generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  nome_usuario  String   @unique
  email         String   @unique
  senha_hash    String
  criado_em     DateTime @default(now())

  // Relação: Um usuário tem um personagem
  character     Character[]
}

model Class {
  id           Int      @id @default(autoincrement())
  name         String   @unique
  hp           Int
  mp           Int?
  strength     Int?
  intelligence Int?
  characters   Character[]
}

model Character {
  id        Int     @id @default(autoincrement())
  nome      String
  classe    String
  xp        Int     @default(0)
  hp        Int
  lastSavedAt   DateTime @default(now()) 
  // Relação: Um personagem pertence a um usuário
  user      User    @relation(fields: [userId], references: [id])
  userId    Int  
  // Relação um personagem tem uma classe
  class     Class    @relation(fields: [classId], references: [id])
  classId   Int
  // Relação com o inventário
  inventory Inventory?
}

model Question {
  id              Int      @id @default(autoincrement())
  texto_pergunta  String
  opcao_a         String
  opcao_b         String
  opcao_c         String
  resposta_correta String // "A", "B" ou "C"
  dificuldade     String   // "Facil", "Medio", "Dificil"
}

model Monster {
  id    Int     @id @default(autoincrement())
  nome  String
  hp    Int
  dano  Int
}

model Item {
  id    Int    @id @default(autoincrement())
  name  String
  type  String // Por exemplo: "weapon", "armor", "potion"
  value Int?   // O valor do item
  
  // Relação com o inventário
  inventories InventoryItem[]
}

model InventoryItem {
  id          Int      @id @default(autoincrement())
  inventoryId Int
  itemId      Int
  quantity    Int      @default(1)

  // Relação com Inventory
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  
  // Relação com Item
  item        Item      @relation(fields: [itemId], references: [id])
}

model Inventory {
  id          Int      @id @default(autoincrement())
  
  // Relação com o personagem
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int      @unique // Garante que cada inventário pertence a um único personagem
  
  // Relação com InventoryItem (os itens do inventário)
  items       InventoryItem[]
}